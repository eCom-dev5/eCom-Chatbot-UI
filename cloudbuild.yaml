steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/ecom-chatbot-ui:$COMMIT_SHA' # Build the Docker image with commit-based tagging
      - './front-end' # Specify the backend folder as the build context

  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/ecom-chatbot-ui:$COMMIT_SHA' # Push the image with the commit-based tag

  # Step 3: Deploy the image to Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'backend-service' # Name of the Cloud Run service
      - '--image'
      - 'gcr.io/$PROJECT_ID/ecom-chatbot-ui:$COMMIT_SHA' # Use the pushed image for deployment
      - '--platform'
      - 'managed' # Use the Cloud Run managed platform
      - '--region'
      - 'us-east1' # Replace with your preferred region
      - '--allow-unauthenticated' # Allow unauthenticated access (optional)
      - '--set-env-vars' # Add environment variables
      - 'REACT_APP_API_BASE_URL=https://rayalwebsite-innhjl4yvq-uk.a.run.app,REACT_APP_PYTHON_API_BASE_URL=https://verta-service-294113686552.us-east1.run.app'

# Timeout for Cloud Build execution
timeout: '900s'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'


substitutions:
  _REGION: 'us-east1'
  _SERVICE_NAME: 'ecom-chatbot-ui'